{"version":3,"sources":["assets/logo.svg","pages/Channels.js","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","react_default","a","createElement","fill","d","cx","cy","r","logo_SvgComponent","props","viewBox","__webpack_require__","p","Channels","mdbreact_esm","className","md","striped","bordered","hover","data","Routes","Switch","Route","exact","path","component","render","React","Component","App","state","collapseID","toggleCollapse","_this","setState","prevState","closeCollapse","overlay","id","style","backgroundColor","onClick","BrowserRouter","color","dark","expand","fixed","scrolling","href","height","width","isOpen","navbar","right","to","marginTop","src_Routes","Date","getFullYear","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3cf4aa2c.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 841.9 595.3\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";\nexport { SvgComponent as ReactComponent };","import React from \"react\";\nimport { MDBDataTable, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody } from \"mdbreact\";\n\nconst Channels = () => {\n  return (\n    <MDBContainer className=\"mt-3\">\n      <MDBRow className=\"py-3\">\n        <MDBCol md=\"12\">\n          <MDBCard>\n            <MDBCardBody>\n              <h2 className=\"h2-responsive pb-4\">\n                Channels List\n              </h2>\n              <MDBDataTable\n                striped\n                bordered\n                hover\n                data=\"/channels\"\n              />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default Channels;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Channels from \"./pages/Channels\";\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Channels} />\n        <Route exact path=\"/channels\" component={Channels} />\n        <Route\n          render={function () {\n            return <h1>Not Found</h1>;\n          }}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse,   MDBNavItem, MDBFooter, MDBNavLink } from \"mdbreact\";\nimport { ReactComponent as Logo } from './assets/logo.svg';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nclass App extends Component {\n\n  state={\n    collapseID: \"\"\n  }\n\n  toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }));\n\n  closeCollapse = collapseID => () =>\n    this.state.collapseID === collapseID && this.setState({ collapseID: \"\" });\n\n  render() {\n\n    const overlay = (\n      <div\n        id=\"sidenav-overlay\"\n        style={{ backgroundColor: \"transparent\" }}\n        onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\n      />\n    );\n\n    const { collapseID } = this.state;\n\n\n    return (\n      <Router>\n        <div className=\"flyout\">\n          <MDBNavbar color=\"red\" dark expand=\"md\" fixed=\"top\" scrolling>\n            <MDBNavbarBrand href=\"/\">\n              <Logo style={{ height: '2.5rem', width: \"2.5rem\" }} />\n              YouTube\n            </MDBNavbarBrand>\n            <MDBNavbarToggler onClick={this.toggleCollapse(\"mainNavbarCollapse\")} />\n            <MDBCollapse\n              id=\"mainNavbarCollapse\"\n              isOpen={this.state.collapseID}\n              navbar\n            >\n              <MDBNavbarNav right>\n                <MDBNavItem>\n                  <MDBNavLink\n                    exact\n                    to=\"/channels\"\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\n                  >\n                    Channels\n                  </MDBNavLink>\n                </MDBNavItem>\n              </MDBNavbarNav>\n            </MDBCollapse>\n          </MDBNavbar>\n          {collapseID && overlay}\n          <main style={{ marginTop: \"4rem\" }}>\n            <Routes />\n          </main>\n          <MDBFooter color=\"red\">\n            <p className=\"footer-copyright mb-0 py-3 text-center\">\n              &copy; {new Date().getFullYear()} Copyright: <a href=\"#\"> YouTube </a>\n            </p>\n          </MDBFooter>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}